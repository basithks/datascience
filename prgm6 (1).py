# -*- coding: utf-8 -*-
"""prgm6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15jTjDgKpX8bxWAzmVBweXrzNsV7tIJMW
"""

import matplotlib.pyplot as plt
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]
plt.plot(x, y, marker='o')# Create line
plt.title('Line Plot')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.show()

import matplotlib.pyplot as plt
categories = ['A', 'B', 'C', 'D', 'E']
values = [4, 7, 1, 8, 5]
plt.bar(categories, values)
plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Simple Bar Plot')
plt.show()

import matplotlib.pyplot as plt
categories = ['A', 'B', 'C', 'D']
values = [5, 7, 3, 8]
plt.bar(categories, values, color='purple')  # Create bar plot
plt.title('Bar Plot')
plt.xlabel('Categories')
plt.ylabel('Values')
plt.show()

import matplotlib.pyplot as plt
import numpy as np
data = np.random.randn(1000)

plt.hist(data, bins=30, color='blue', edgecolor='black')
plt.title('Histogram')
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.show()

import matplotlib.pyplot as pit
x = [5, 7, 8, 7, 2, 17, 2, 9, 4, 11, 12, 9, 6]
y = [99, 86, 87, 88, 100, 86, 103, 87, 94, 78, 77, 85, 86,]
plt.scatter(x, y, color='red')
plt.title('Scatter Plot')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.show()

import matplotlib.pyplot as plt

sizes = [15, 30, 45, 10]  # âœ… Fixed here
labels = ['A', 'B', 'C', 'D']
colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']

plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)
plt.title('Pie Chart')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.show()

import matplotlib.pyplot as plt
import numpy as np
data = [np.random.normal(0, std, 100) for std in range(1, 4)]

plt.boxplot(data)

plt.xlabel('Data Sets')
plt.ylabel('Values')
plt.title('Simple Box Plot')

plt.show()

import matplotlib.pyplot as plt


x1 = [1, 2, 3, 4, 5]
y1 = [2, 3, 4, 5, 6]

x2 = [2, 3, 4, 5, 6]
y2 = [3, 4, 5, 6, 7]

x3 = [1, 3, 5, 7, 9]
y3 = [9, 7, 5, 3, 1]


plt.scatter(x1, y1, color="red", label="Dataset 1")
plt.scatter(x2, y2, color="blue", label="Dataset 2")
plt.scatter(x3, y3, color="green", label="Dataset 3")

plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Multiple Scatter Plots")
plt.legend()
plt.show()

import matplotlib.pyplot as plt

# Data
x = [1,2,3,4,5]
y = [10,15,13,8,7]
sizes = [100, 200, 300, 400, 500]

plt.scatter(x, y, s=sizes, alpha=0.5, c='blue')
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Bubble Chart Example")

plt.show()

import matplotlib.pyplot as plt

# Data
x = [1,2,3,4,5]
y = [10,15,13,8,7]
sizes = [100, 200, 300, 400, 500]
colors = [20,30,40,50,60]

plt.scatter(x, y, s=sizes, alpha=0.6, c=colors, cmap='viridis')
plt.colorbar(label="color scale")

plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.title("Bubble Chart Example")


plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Sample data
x = np.linspace(0, 10, 100)
y1 = np.sin(x)
y2 = np.cos(x)

# Create a figure with 2 subplots (vertically stacked)
fig, axs = plt.subplots(2, 1, figsize=(8, 8))

# First subplot
axs[0].plot(x, y1, 'b')
axs[0].set_title('Sine Function')
axs[0].set_ylabel('sin(x)')

# Second subplot
axs[1].plot(x, y2, 'r')
axs[1].set_title('Cosine Function')
axs[1].set_ylabel('cos(x)')
axs[1].set_xlabel('x')

# Adjust layout
plt.tight_layout()

# Show the plot
plt.show()