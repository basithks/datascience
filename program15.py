# -*- coding: utf-8 -*-
"""Program15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b4K6A8mjQeomBDRRLGotwgeGH6l6I2AC
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import classification_report,confusion_matrix
from sklearn import tree
import matplotlib.pyplot as plt
import seaborn as sns

wine_data=pd.read_csv("/content/WineQT.csv",sep=",")
print(wine_data.head())

if 'color' in wine_data.columns:
  wine_data=pg.get_dummies(wine_data,columns=['color'],drop_first=True)

wine_data.columns = wine_data.columns.str.strip()
X=wine_data.drop('quality',axis=1)
y=wine_data['quality']
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
dt_classifier=DecisionTreeClassifier(random_state=42,max_depth=3)
dt_classifier.fit(X_train,y_train)

y_pred=dt_classifier.predict(X_test)
classification_rep=classification_report(y_test,y_pred,zero_division=1)
print("Classification Report:")
print(classification_rep)

conf_matrix=confusion_matrix(y_test,y_pred)
print("\nConfusion Matrix:")
print(conf_matrix)

plt.figure(figsize=(6,4))
sns.heatmap(conf_matrix,annot=True,fmt='d',cmap='Blues',cbar=False)
plt.xlabel('Predicted')
plt.ylabel('True')
plt.title('Confusion Matrix')
plt.show()

plt.figure(figsize=(12,8))
tree.plot_tree(dt_classifier,feature_names=X.columns,class_names=[str(label) for label in dt_classifier.classes_],filled=True)
plt.show()